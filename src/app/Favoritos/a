Buscar un anime
"use client"
import { useState, useEffect } from 'react';

function AnimePage() {
  const [anime, setAnime] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchAnimeData = async () => {
      setLoading(true);
      try {
        const response = await fetch('https://api.jikan.moe/v4/anime'); // Endpoint para obtener datos sobre un anime (por ejemplo, el anime con id 1)
        if (!response.ok) {
          throw new Error('Error fetching anime data');
        }
        const data = await response.json();
        setAnime(data.data); // Asumimos que la respuesta contiene un campo "data"
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchAnimeData();
  }, []); // Esto solo se ejecuta una vez cuando el componente se monta

  if (loading) {
    return <p>Loading...</p>;
  }

  if (error) {
    return <p>Error: {error}</p>;
  }

  return (
    <div>
      <h1>{anime.title}</h1>
      <img src={anime.images.jpg.image_url} alt={anime.title} />
      <p>{anime.synopsis}</p>
      <p>Score: {anime.score}</p>
    </div>
  );
}

export default AnimePage;



----------------------------
card
function AnimeCard({ anime }) {
  return (
    <div className="card">
      <img src={anime.images.jpg.image_url} alt={anime.title} />
      <h2>{anime.title}</h2>
      <p>{anime.synopsis}</p>
      <a href={anime.url} target="_blank" rel="noopener noreferrer">Ver más</a>
    </div>
  );
}

export default AnimeCard;

------------------

Catalogo completo

import { useState, useEffect } from "react";
import AnimeCard from "@/components/AnimeCard"; // Suponiendo que tienes un componente para mostrar cada anime

function Catalog() {
  const [animeData, setAnimeData] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchAnimeData = async () => {
      setLoading(true);
      try {
        const response = await fetch("https://api.jikan.moe/v4/anime");
        const data = await response.json();
        setAnimeData(data.data); // Guardar los animes en el estado
      } catch (error) {
        console.error("Error fetching anime data:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchAnimeData();
  }, []); // Ejecutar solo al montar el componente

  if (loading) return <p>Cargando catalogo...</p>;

  return (
    <div className="flex flex-wrap items-center justify-center divide-y-2">
      <h1 className="text-5xl p-10 text-[#ff640a] font-bold">Catálogo de Animes</h1>
      <div className="grid grid-cols-1 sm:grid-cols-3 md:grid-cols-5 gap-5 p-6">
        {animeData.map((anime) => (
          <AnimeCard key={anime.mal_id} anime={anime} />
        ))}
      </div>
    </div>
  );
}

export default Catalog;
